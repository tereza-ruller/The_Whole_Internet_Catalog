Client–server model: The client–server model, or client–server architecture, is an approach to computer network programming in which computers in a network assume one of two roles: The server selectively shares its resources, and the client initiates contact with a server in order to use those resources. The client–server model is prevalent in computer networks. Email, network printing, and the World Wide Web all apply the client–server model. How clients and servers communicate: Clients and servers exchange messages in a request-response messaging pattern: The client sends a request, and the server returns a response. This exchange of messages is an example of inter-process communication. To communicate, the computers must have a common language, and they must follow rules so that both the client and the server know what to expect. All client-server protocols operate in the application layer. The application-layer protocol defines the basic patterns of the dialogue. To formalize exchange data even further, the server may implement an API (such as a web service). The API is an abstraction layer for such resources as databases and custom software. By restricting communication to a specific content format, it facilitates parsing. By abstracting access, it facilitates cross-platform data exchange. A server may receive requests from many different clients in a very short period of time. To prevent abuse and maximize uptime, the server's software limits how a client can use the server's resources. Even so, a server is not immune from abuse. A denial of service attack exploits a server's obligation to process requests by bombarding it with requests incessantly. This inhibits the server's ability to responding to legitimate requests.
